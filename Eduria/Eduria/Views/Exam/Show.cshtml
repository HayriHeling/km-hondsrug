@model Eduria.Models.ExamModel
@{
    ViewData["Title"] = "Show";
}

    <section id="exam">
        <div id="noneToday">
            <div class="row large">
                <div class="medium-12 columns">
                    <p id="answer"></p>
                    <h2>Toets tijdvakken</h2>
                    <p id="Question">Klik op start om te beginnen</p>
                    <form>
                        <div class="cc-selector">
                            <input id="1" type="radio" name="timeperiod" onclick="eventListener(this)" value="prehistorie" />
                            <label class="timeperiod prehistorie" for="1"></label>
                            <input id="2" type="radio" name="timeperiod" onclick="eventListener(this)" value="oudheid" />
                            <label class="timeperiod oudheid" for="2"></label>
                            <input id="3" type="radio" name="timeperiod" onclick="eventListener(this)" value="vmiddeleeuwen" />
                            <label class="timeperiod vmiddeleeuwen" for="3"></label>
                            <input id="4" type="radio" name="timeperiod" onclick="eventListener(this)" value="lmiddeleeuwen" />
                            <label class="timeperiod lmiddeleeuwen" for="4"></label>
                            <input id="5" type="radio" name="timeperiod" onclick="eventListener(this)" value="nieuwetijd" />
                            <label class="timeperiod nieuwetijd" for="5"></label>
                            <input id="6" type="radio" name="timeperiod" onclick="eventListener(this)" value="goudeneeuw" />
                            <label class="timeperiod goudeneeuw" for="6"></label>
                            <input id="7" type="radio" name="timeperiod" onclick="eventListener(this)" value="verlichting" />
                            <label class="timeperiod verlichting" for="7"></label>
                            <input id="8" type="radio" name="timeperiod" onclick="eventListener(this)" value="industrie" />
                            <label class="timeperiod industrie" for="8"></label>
                            <input id="9" type="radio" name="timeperiod" onclick="eventListener(this)" value="oorlog" />
                            <label class="timeperiod oorlog" for="9"></label>
                            <input id="10" type="radio" name="timeperiod" onclick="eventListener(this)" value="tv" />
                            <label class="timeperiod tv" for="10"></label>
                        </div>
                        <div class="medium-offset-10 medium-2 columns">
                            <input type="button" value="Start" onclick="ExamLogic(QuestionModelArray, AnswerModelArray, count)" class="button" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
<script language="javascript">
    var QuestionModelArray = [];
    var AnswerModelArray = [];
    var currentAnswersArray = [];
    var tempCurrentQuestion;
    var count = 0;
    var score = 0;
    var maxScore = 0;
    var pointsPerQuestion = 5;

    var selected = 0;

    function createTempQuestion(id, text, answerId) {
        maxScore = maxScore + pointsPerQuestion;
        return { QuestionId: id, Text: text, AnswerId: answerId };
    }

    function createTempAnswer(id, questionId, text, correctAnswer) {
        return { AnswerId: id, QuestionId: questionId, Text: text, CorrectAnswer: correctAnswer };
    }

    function eventListener(element) {
        selected = element.id;
    }

    @foreach (var d in Model.QuestionModels)
    { 
        @:QuestionModelArray.push(createTempQuestion(@d.QuestionId, "@d.Text", @d.AnswerId));
    }

    @*@foreach (var e in Model.AnswerModels)
    {
        @:AnswerModelArray.push(createTempAnswer(@e.AnswerId, @e.QuestionId, "@e.Text", "@e.CorrectAnswer"));
    }*@

    function ChangeButtons(names) {
        // TODO
    }

    function CheckAnswer(tempAnswerArray, clickedId) {
        var output = false;
        if (tempAnswerArray[clickedId - 1].CorrectAnswer === "True") {
            output = true;
            score++;
        }
        console.log(clickedId + " is " + output);
        return output;
    }

    function CheckAnswerT(question, clickedId) {
        clickedId = parseInt(clickedId);
        
        console.log(question.AnswerId + ", and selected is: " + clickedId + ", and " + (question.AnswerId + clickedId));
        var output = false;
        if (parseInt(question.AnswerId) === clickedId) {
            console.log("Went in");
            output = true;
        }
        return output;
    }

    function GetAnswersByQuestionId(answerArray, questionId) {
        var outputArray = [];
        answerArray.forEach(function (element) {
            if (element.QuestionId === questionId) {
                outputArray.push(element);
            }
        });
        return outputArray;
    }

    function ExamLogic(questionArray, answerArray, id) {
        console.log(questionArray);
        if (id === 0) {
            StartExam(questionArray.splice(0, 1)[0], answerArray);
        } else if (0 === questionArray.length) {
            FinishedExam(score);
        } else {
            if (CheckAnswerT(tempCurrentQuestion, selected)) {
                document.getElementById("answer").innerHTML = "<div class='error correct'>Je hebt de vraag goed beantwoord!</div>";
                score = score + 1;
            } else {
                questionArray.push(tempCurrentQuestion);
                if (maxScore > 0) {
                    maxScore = maxScore - 1;
                }
                document.getElementById("answer").innerHTML = "<div class='error wrong'>Helaas, deze vraag heb je verkeerd beantwoord!</div>";
            }
            NextQuestion(questionArray.splice(0, 1)[0], answerArray, id);
        }
        count++;
    }

    function StartExam(question, answerArray) {
        SetupQuestion(question, answerArray, 0);
    }

    function NextQuestion(question, answerArray, id) {
        SetupQuestion(question, answerArray, id);
    }

    function SetupQuestion(question, answerArray, id) {
        console.log(question);
        tempCurrentQuestion = question;
        document.getElementById("Question").innerHTML = question.Text;
        //5currentAnswersArray = GetAnswersByQuestionId(answerArray, question.QuestionId);
    }

    function FinishedExam(numCorrect) {
        document.getElementById("Question").innerHTML = "Dat was het examen! Je had " + numCorrect + " vragen goed! Dat zorgt voor een score van: " + maxScore;
        console.log("klaar");
    }

    function SetupExam() {
        QuestionModelArray.reverse();

    }

</script>